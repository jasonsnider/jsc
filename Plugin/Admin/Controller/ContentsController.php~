<?php

/**
 * Provides controll logic for managing content
 *
 * Parbake (http://jasonsnider.com/parbake)
 * Copyright 2013, Jason D Snider. (http://jasonsnider.com)
 *
 * Licensed under The MIT License
 * Redistributions of files must retain the above copyright notice.
 *
 * @copyright Copyright 2013, Jason D Snider. (http://jasonsnider.com)
 * @link http://jasonsnider.com
 * @license MIT License (http://www.opensource.org/licenses/mit-license.php)
 * @author Jason D Snider <jason@jasonsnider.com>
 * @package       Users
 */
App::uses('ContentsAppController', 'Contents.Controller');

/**
 * Provides controll logic for managing content
 * @author Jason D Snider <jason@jasonsnider.com>
 * @package app/Users
 */
class ContentsController extends UsersAppController {

    /**
     * Holds the name of the controller
     *
     * @var string
     */
    public $name = 'Contents';

    /**
     * Call the components to be used by this controller
     *
     * @var array
     */
    //public $components = array();

    /**
     * Called before action
     * @return void
     */
    public function beforeFilter() {
        parent::beforeFilter();
        $this->Auth->allow();
        $this->Authorize->allow();
    }

    /**
     * The models used by the controller
     *
     * @var array
     */
    public $uses = array(
        'Users.Contents',
    );

    /**
     * Displays an index of all content
     * @return void
     */
    public function index() {

        $this->paginate = array(
            'conditions' => array(),
            'limit' => 30
        );

        $data = $this->paginate('Content');
        $this->set(compact('data'));
    }

    /**
     * A method for creating a new content
     * @return void
     */
    public function create() {}

    /**
     * Displays content; a single page or post.
     * @param string $id The id of the user to be viewed
     * @return void
     */
    public function view() {}

    /**
     * Allows a content to be updated
     * @param string $id The id of the user to be edited
     * @return void
     */
    public function edit($id) {}

}
